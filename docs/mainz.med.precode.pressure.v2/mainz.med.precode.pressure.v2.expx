<?xml version="1.0" encoding="UTF-8"?>
<experiment 
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xsi:noNamespaceSchemaLocation="https://labbench.io/xsd/5.1/experiment.xsd">
  <subject-validator 
    regex="^S[0-9]{3}LONG$|^S[0-9]{3}SHORT$|^PILOT[0-9]{3}LONG$|^PILOT[0-9]{3}SHORT$"
    advice="Please enter an ID in the form of [TYPE]XXX[VARIANT, where X is a digit, TYPE is either S or PILOT, and VARIANT is either SHORT or LONG" />

    <experimental-setup-variants default="cparPlus">
        <experimental-setup name="LabBench CPAR+" id="cparPlus">
            <devices>
                <cpar-plus id="cpar" />
    
                <display 
                    id="display"
                    active-color="rgb(255, 255, 255)"
                    background-color="rgb(255, 255, 255)"
                    inactive-color="rgb(0, 0, 0)"
                    normative-distance="40"
                    position="upper-right"
                    screen="primary">
                    
                    <monitor 
                        diagonal-size="13"
                        distance="40"/>
    
                    <configurations>
                        <image-display 
                            id="image"
                            experimental-setup-id="display"
                            background-color="rgb(255, 255, 255)"/>
                    </configurations>
                </display>
            </devices>
            <device-mapping>
                <device-assignment device-id="cpar" instrument-name="PressureAlgometer"/>
                <device-assignment device-id="display.image" instrument-name="ImageDisplay" />
                <device-assignment device-id="cpar" instrument-name="RatioScale" />
            </device-mapping>
        </experimental-setup>   
        <experimental-setup name="Nocitech CPAR" id="cpar">
            <devices>
                <cpar id="cpar" compressor-mode="AUTO"/>
    
                <display 
                    id="display"
                    active-color="rgb(255, 255, 255)"
                    background-color="rgb(255, 255, 255)"
                    inactive-color="rgb(0, 0, 0)"
                    normative-distance="40"
                    position="upper-right"
                    screen="primary">
                    
                    <monitor 
                        diagonal-size="13"
                        distance="40"/>
    
                    <configurations>
                        <image-display 
                            id="image"
                            experimental-setup-id="display"
                            background-color="rgb(255, 255, 255)"/>
                    </configurations>
                </display>
            </devices>
            <device-mapping>
                <device-assignment device-id="cpar" instrument-name="PressureAlgometer"/>
                <device-assignment device-id="display.image" instrument-name="ImageDisplay" />
                <device-assignment device-id="cpar" instrument-name="RatioScale" />
            </device-mapping>
        </experimental-setup>       
    </experimental-setup-variants>
    <protocol>
        <languages>
            <language 
                name="German" 
                code="de"/>
            <language 
                name="English" 
                code="en"/>
        </languages>
        <sessions>
            <session id="SES01" name="Session 1" />
            <session id="SES02" name="Session 2" />
        </sessions>
        <defines>
            <!-- Definitions for the image generate -->
            <define name="ImageWidth" value="1920"/>
            <define name="ImageHeight" value="1080"/>
                     <!-- The number of trials in each block is the number of cues multiplied by the block size. For the learning phase we have 4 cues (2 low, 2 high). 
                      For the test phase we have 8 cues (2 low congruent, 2 low incongruent, 2 high congruent, 2 high incongruent). 
                      So in the original protocol we set LearningBlockSize to 5 and TestBlockSize to 2. This results in a total of 80 stimuli for the 
                      learning phase (4 blocks x 4 cues x 5) and 64 stimuli for the test phase (4 blocks x 8 cues x 2). -->
            <define 
                name="NumberOfLearningBlocks"
                value="4 if 'LONG' in Subject else 2"/> <!-- correct value: 4-->
            <define 
                name="LearningTaskBlockSize" 
                value="5 if 'LONG' in Subject else 5"/> <!-- correct value: 20/4 = 5 // Originally 80 Trials Learning Phase and 60 trials testphase -->
            <define 
                name="NumberOfTestBlocks"
                value="4 if 'LONG' in Subject else 4"/> <!--  correct value: 4 -->
            <define 
                name="TestTaskBlockSize" 
                value="2 if 'LONG' in Subject else 2"/> <!--correct value: 12 make it 16 so it will work: 16/8 = 2 -->
            <define 
                name="Images" 
                value="func: Script.CreateImageRepository(tc)"/>
            <define 
                name="NumberOfLearningBlocksExample"
                value="1 if 'LONG' in Subject else 1"/> 
            <define 
                name="LearningTaskExampleBlockSize" 
                value="1 if 'LONG' in Subject else 1"/> 
            <define 
                name="NumberOfExampleTestBlocks"
                value="1 if 'LONG' in Subject else 1"/> 
            <define 
                name="TestTaskExampleBlockSize" 
                value="1 if 'LONG' in Subject else 1"/> 
        </defines>
        <templates>
            <variables>
                <strings value="SES01;SES02" name="Sessions" />
            </variables>
            <content>
                <psychophysics-stimulus-presentation id="PRESENTATION"
                    experimental-setup-id="display"
                    stimulus-update-rate="50">

                    <intensity 
                        type="array"
                        value="range(5, 101, 5)" />
        
                    <responses response-collection="ratio-rating"/>
                    
                    <stimulation>
                        <scripts 
                            initialize="True"
                            stimulate="func: Script.Stimulate(tc,x)"
                            stimulus-description="Pressure"
                            stimulus-unit="kPa">

                            <instrument 
                                name="PressureAlgometer"
                                interface="pressure-algometer"/>                
                        </scripts>
                    </stimulation>                            
                </psychophysics-stimulus-presentation>
        
                <psychophysics-threshold-estimation id="THR30"
                    experimental-setup-id="display"
                    stimulus-update-rate="50">

                    <dependencies>
                        <dependency id="var: '{s}PRESENTATION'.format(s = session)"/>
                    </dependencies>
        
                    <update-rate-random 
                        min="4000" 
                        max="6000"/>
        
                    <ratio-rating-task target="3"/>
        
                    <stimulation-scripts 
                        initialize="True"
                        stimulate="func: Script.Stimulate(tc,x)"
                        stimulus-description="Pressure"
                        stimulus-unit="kPa">

                        <instrument 
                            name="PressureAlgometer"
                            interface="pressure-algometer"/>
                    </stimulation-scripts>
        
                    <stimulus-channel-template 
                        Imax="100"
                        Imin="0">
                        <up-down-method 
                            reversal-rule="1"
                            step-size="0.1"
                            initial-direction="increasing"
                            start-intensity="PRESENTATION.Intensity"
                            step-size-type="relative"
                            max-step-size-reduction="0.1"
                            step-size-reduction="0.5"
                            skip-rule="0"
                            stop-rule="2" />
                    </stimulus-channel-template>

                    <channels>
                        <channel id="PULSE" name="Pulse (1s)" channel-type="single-sample">        
                            <stimulus>
                                <pulse 
                                    Is="x" 
                                    Ts="1000" />
                            </stimulus>
                        </channel>
                    </channels>
                </psychophysics-threshold-estimation>
        
                <psychophysics-threshold-estimation id="THR70"
                    experimental-setup-id="display"
                    stimulus-update-rate="50">

                    <dependencies>
                        <dependency id="var: '{s}PRESENTATION'.format(s = session)"/>
                    </dependencies>
        
                    <update-rate-random 
                        min="4000" 
                        max="6000"/>
        
                    <ratio-rating-task target="7"/>
        
                    <stimulation-scripts 
                        initialize="True"
                        stimulate="func: Script.Stimulate(tc,x)"
                        stimulus-description="Pressure"
                        stimulus-unit="kPa">

                        <instrument 
                            name="PressureAlgometer"
                            interface="pressure-algometer"/>
                    </stimulation-scripts>

                    <stimulus-channel-template 
                        Imax="100"
                        Imin="0">
                        <up-down-method 
                            reversal-rule="1"
                            step-size="0.1"
                            initial-direction="increasing"
                            start-intensity="PRESENTATION.Intensity"
                            step-size-type="relative"
                            max-step-size-reduction="0.1"
                            step-size-reduction="0.5"
                            skip-rule="0"
                            stop-rule="2" />
                    </stimulus-channel-template>
        
                    <channels>
                        <channel id="PULSE" name="Pulse (1s)" channel-type="single-sample">        
                            <stimulus>
                                <pulse 
                                    Is="x" 
                                    Ts="1000" />
                            </stimulus>
                        </channel>
                    </channels>
                </psychophysics-threshold-estimation>
            
                <stimulation-sequence id ="LPE"
                    experimental-setup-id="display"
                    response-collection="none"
                    stimulus-update-rate="50">

                <test-events complete="func: Script.LearningComplete(tc)" />

                <dependencies>
                    <dependency id="var: '{s}THR30'.format(s = session)"/>
                    <dependency id="var: '{s}THR70'.format(s = session)"/>
                </dependencies>

                <condition expression="THR30['PULSE'] &lt; THR70['PULSE']" help="VAS 3.0 threshold must be lower than the VAS 7.0 threshold" />

                <stimulation-scripts 
                    stimulate="func: Script.RunLearning(tc,x)"
                    initialize="func: Script.InitializeExampleLearning(tc)"                                     
                    stimulus-description="Pressure"
                    stimulus-unit="kPa">

                    <instrument 
                        interface="image-display"
                        name="ImageDisplay"/>
                    <instrument 
                        interface="pressure-algometer" 
                        name="Response" />
                </stimulation-scripts>

                <stimulation-pattern time-base="seconds">
                    <sequence
                        iterations="NumberOfLearningBlocksExample">
                        <sequence 
                            iterations="LearningTaskExampleBlockSize*NumberOfStimuli" 
                            Tperiod="11" />

                        <sequence 
                            pause="true" 
                            Tperiod="1" />

                    </sequence>
                </stimulation-pattern>

                <stimuli order="block-random">
                    <stimulus name="L0" />
                    <stimulus name="L1" />
                    <stimulus name="H0" />
                    <stimulus name="H1" />
                </stimuli>            
                </stimulation-sequence>
                        
                <stimulation-sequence id ="LP"
                    experimental-setup-id="display"
                    response-collection="none"
                    stimulus-update-rate="50">

                    <test-events complete="func: Script.LearningComplete(tc)" />

                    <dependencies>
                        <dependency id="var: '{s}THR30'.format(s = session)"/>
                        <dependency id="var: '{s}THR70'.format(s = session)"/>
                        <dependency id="var: '{s}LPE'.format(s = session)"/>
                    </dependencies>
        
                    <stimulation-scripts 
                        stimulate="func: Script.RunLearning(tc,x)"
                        initialize="func: Script.InitializeLearning(tc)"                                     
                        stimulus-description="Pressure"
                        stimulus-unit="kPa">

                        <instrument 
                            interface="image-display"
                            name="ImageDisplay"/>
                        <instrument 
                            interface="pressure-algometer" 
                            name="Response" />
                    </stimulation-scripts>
        
                    <stimulation-pattern time-base="seconds">
                        <sequence
                            iterations="NumberOfLearningBlocks">
                            <sequence 
                                iterations="LearningTaskBlockSize*NumberOfStimuli" 
                                Tperiod="11" />

                            <sequence 
                                pause="true" 
                                Tperiod="1" />

                        </sequence>
                    </stimulation-pattern>
        
                    <stimuli order="block-random">
                        <stimulus name="L0" />
                        <stimulus name="L1" />
                        <stimulus name="H0" />
                        <stimulus name="H1" />
                    </stimuli>            
                </stimulation-sequence>
            
                <stimulation-sequence id="TPE"
                    experimental-setup-id="display"
                    response-collection="none"
                    stimulus-update-rate="50">

                    <test-events complete="func: Script.TestComplete(tc)" />

                    <dependencies>
                        <dependency id="var: '{s}THR30'.format(s = session)"/>
                        <dependency id="var: '{s}THR70'.format(s = session)"/>
                        <dependency id="var: '{s}LP'.format(s = session)"/>
                    </dependencies>
        
                    <stimulation-scripts 
                        stimulate="func: Script.RunTest(tc,x)"
                        initialize="func: Script.InitializeExampleTest(tc)"
                        stimulus-description="Pressure"
                        stimulus-unit="kPa">

                        <instrument 
                            interface="image-display"
                            name="ImageDisplay"/>
                        <instrument 
                            name="PressureAlgometer"
                            interface="pressure-algometer"/>
                        <instrument 
                            interface="pressure-algometer" 
                            name="Response" />
                    </stimulation-scripts>
        
                    <stimulation-pattern time-base="seconds">
                        <sequence
                            iterations="NumberOfExampleTestBlocks"> 

                            <sequence 
                                iterations="TestTaskExampleBlockSize*NumberOfStimuli" 
                                Tperiod="17" />

                            <sequence
                                pause="true"
                                Tperiod="1"/>
                        </sequence>
                    </stimulation-pattern>
                    
                    <stimuli order="block-random">
                        <stimulus name="L0C"/>
                        <stimulus name="L0I" />
                        <stimulus name="L1C" />
                        <stimulus name="L1I" />
                        <stimulus name="H0C" />
                        <stimulus name="H0I" />
                        <stimulus name="H1C" />
                        <stimulus name="H1I" />
                    </stimuli>
                </stimulation-sequence>
                                        
                <stimulation-sequence id="TP"
                    experimental-setup-id="display"
                    response-collection="none"
                    stimulus-update-rate="50">

                    <test-events complete="func: Script.TestComplete(tc)" />

                    <dependencies>
                        <dependency id="var: '{s}THR30'.format(s = session)"/>
                        <dependency id="var: '{s}THR70'.format(s = session)"/>
                        <dependency id="var: '{s}LP'.format(s = session)"/>
                        <dependency id="var: '{s}TPE'.format(s = session)"/>
                    </dependencies>
        
                    <stimulation-scripts 
                        stimulate="func: Script.RunTest(tc,x)"
                        initialize="func: Script.InitializeTest(tc)"
                        stimulus-description="Pressure"
                        stimulus-unit="kPa">

                        <instrument 
                            interface="image-display"
                            name="ImageDisplay"/>
                        <instrument 
                            name="PressureAlgometer"
                            interface="pressure-algometer"/>
                        <instrument 
                            interface="pressure-algometer" 
                            name="Response" />
                    </stimulation-scripts>
        
                    <stimulation-pattern time-base="seconds">
                        <sequence
                            iterations="NumberOfTestBlocks">

                            <sequence 
                                iterations="TestTaskBlockSize*NumberOfStimuli" 
                                Tperiod="17" />

                            <sequence
                                pause="true"
                                Tperiod="1"/>
                        </sequence>
                    </stimulation-pattern>
                    
                    <stimuli order="block-random">
                        <stimulus name="L0C"/>
                        <stimulus name="L0I" />
                        <stimulus name="L1C" />
                        <stimulus name="L1I" />
                        <stimulus name="H0C" />
                        <stimulus name="H0I" />
                        <stimulus name="H1C" />
                        <stimulus name="H1I" />
                    </stimuli>
                </stimulation-sequence>        
            </content>
        </templates>
        <tests>
            <foreach variable="session" in="Sessions">
                <psychophysics-stimulus-presentation-constructor 
                    id="var: '{s}PRESENTATION'.format(s = session)" 
                    name="var: '{s}: Presentation of pressure stimuli'.format(s = session)" 
                    session="var: session"
                    template="PRESENTATION" />    

                <psychophysics-threshold-estimation-constructor 
                    id="var: '{s}THR30'.format(s = session)" 
                    name="var: '{s}: Threshold (VAS 3)'.format(s = session)" 
                    session="var: session"
                    template="THR30" />

                <psychophysics-threshold-estimation-constructor 
                    id="var: '{s}THR70'.format(s = session)" 
                    name="var: '{s}: Threshold (VAS 7)'.format(s = session)" 
                    session="var: session"
                    template="THR70" />

                <stimulation-sequence-constructor 
                    id="var: '{s}LPE'.format(s = session)" 
                    name="var: '{s}: Learning Phase Example'.format(s = session)" 
                    session="var: session"
                    template="LPE" />

                <stimulation-sequence-constructor 
                    id="var: '{s}LP'.format(s = session)" 
                    name="var: '{s}: Learning Phase'.format(s = session)" 
                    session="var: session"
                    template="LP" />

                <stimulation-sequence-constructor 
                    id="var: '{s}TPE'.format(s = session)" 
                    name="var: '{s}: Test Phase Example'.format(s = session)" 
                    session="var: session"
                    template="TPE" />

                <stimulation-sequence-constructor 
                    id="var: '{s}TP'.format(s = session)" 
                    name="var: '{s}: Test Phase'.format(s = session)" 
                    session="var: session"
                    template="TP" />
            </foreach>                                                                            
        </tests>
        <assets>
            <file-asset 
                id="Script" 
                file="Script.py"  />
            <file-asset 
                id="VisualStimuli" 
                file="VisualStimuli.zip" />
            <file-asset id="Roboto" file="Roboto-Regular.ttf" />
        </assets>        
    </protocol> 
</experiment>
